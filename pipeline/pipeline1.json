{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Check whether its 401K or not",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Filenames and config info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"ifFalseActivities": [
						{
							"name": "Invest",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"enableStaging": false
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "401K",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"enableStaging": false
							}
						}
					]
				}
			},
			{
				"name": "Load Config",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Get Filenames and config info",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Load Config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Run business logic",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Check whether its 401K or not",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Run Business logic",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					}
				}
			},
			{
				"name": "Send emails",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Run business logic",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-38.eastus.logic.azure.com:443/workflows/84e27b95e3204868ac8b69e4760e388d/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=MOf61uCuQvaJpJIXthbcMMjR6Gtff817bPPHTlWib3A",
					"method": "POST"
				}
			},
			{
				"name": "Filename",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": []
			},
			{
				"name": "Filetype",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": []
			},
			{
				"name": "Pipeline",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": []
			},
			{
				"name": "Execute Pipeline1",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitOnCompletion": true
				}
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"cases": [
						{
							"value": "Case1",
							"activities": [
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"linkedServices": [],
										"datasets": []
									}
								}
							]
						}
					]
				}
			}
		],
		"annotations": []
	}
}